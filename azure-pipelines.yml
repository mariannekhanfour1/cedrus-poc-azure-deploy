# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master 
 
stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'clean build'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/build/libs/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
      
    # - task: AzureWebApp@1
    #   inputs:
    #     azureSubscription: poc_test_connection
    #     appType: webAppLinux
    #     appName: cedrus-poc-spring2
    #     package: '$(System.DefaultWorkingDirectory)/build/libs/*.jar'



- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: VMDeploy
    displayName: web
    environment:
      name:  spring-app-deployment
      resourceType: VirtualMachine
      resourceName: cedrus-devops-poc
      # tags: poc
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                sudo java -jar '$(Pipeline.Workspace)/drop/build/libs/spring-0.0.1-SNAPSHOT.jar'
          # - script: java -jar build/libs/spring-0.0.1-SNAPSHOT.jar

